<!--This defines one NoC-Block.-->
<nocblock>
  <name>FFT</name>
  <blockname>FFT</blockname>
  <!--There can be several of these:-->
  <ids>
    <id revision="0">FF70</id>
  </ids>
  <!-- Registers -->
  <registers>
    <!--Note: AXI config bus uses 129 & 130-->
    <setreg>
      <name>FFT_RESET</name>
      <address>131</address>
    </setreg>
    <setreg>
      <name>FFT_SIZE_LOG2</name>
      <address>132</address>
    </setreg>
    <setreg>
      <name>MAGNITUDE_OUT</name>
      <address>133</address>
    </setreg>
    <setreg>
      <name>FFT_DIRECTION</name>
      <address>134</address>
    </setreg>
    <setreg>
      <name>FFT_SCALING</name>
      <address>135</address>
    </setreg>
    <setreg>
      <name>FFT_SHIFT_CONFIG</name>
      <address>136</address>
    </setreg>
    <readback>
      <name>RB_FFT_RESET</name>
      <address>0</address>
    </readback>
    <readback>
      <name>RB_MAGNITUDE_OUT</name>
      <address>1</address>
    </readback>
    <readback>
      <name>RB_FFT_SIZE_LOG2</name>
      <address>2</address>
    </readback>
    <readback>
      <name>RB_FFT_DIRECTION</name>
      <address>3</address>
    </readback>
    <readback>
      <name>RB_FFT_SCALING</name>
      <address>4</address>
    </readback>
    <readback>
      <name>RB_FFT_SHIFT_CONFIG</name>
      <address>5</address>
    </readback>
  </registers>
  <!-- Args -->
  <args>
    <arg>
      <name>spp</name>
      <type>int</type>
      <value>256</value>
      <check>GE($spp, 16) AND LE($spp, 4096) AND IS_PWR_OF_2($spp)</check>
      <check_message>FFT size must be in [16, 4096] and a power of two.</check_message>
      <action>SR_WRITE("FFT_SIZE_LOG2", LOG2($spp))</action>
    </arg>
    <arg>
      <name>shift</name>
      <type>string</type>
      <value>normal</value>
      <check>EQUAL($shift, "normal") OR EQUAL($shift, "reverse") OR EQUAL($shift, "natural")</check>
      <check_message>FFT direction must be either "normal", "reverse", or "natural".</check_message>
      <action>
          IF(EQUAL($shift, "normal"),  SR_WRITE("FFT_SHIFT_CONFIG", 0)) OR
          IF(EQUAL($shift, "reverse"), SR_WRITE("FFT_SHIFT_CONFIG", 1)) OR
          IF(EQUAL($shift, "natural"), SR_WRITE("FFT_SHIFT_CONFIG", 2))
      </action>
    </arg>
    <arg>
      <name>direction</name>
      <type>string</type>
      <value>forward</value>
      <check>EQUAL($direction, "forward") OR EQUAL($direction, "reverse")</check>
      <check_message>FFT direction must be either "forward" or "reverse".</check_message>
      <action>
          IF(EQUAL($direction, "forward"),  SR_WRITE("FFT_DIRECTION", 1)) OR
          IF(EQUAL($direction, "reverse"), SR_WRITE("FFT_DIRECTION", 0))
      </action>
    </arg>
    <arg>
      <name>scaling</name>
      <type>int</type>
      <!--scaling per radix-4 butterfly-->
      <value>1706</value>
      <action>SR_WRITE("FFT_SCALING", $scaling)</action>
    </arg>
    <arg>
      <name>otype</name>
      <type>string</type>
      <value>sc16</value>
      <check>EQUAL($otype, "sc16")</check>
      <check_message>Output data type must be sc16.</check_message>
      <!--TODO: Check against mag-out value (requires GET() function) -->
    </arg>
    <arg>
      <name>reset</name>
      <type>int</type>
      <value>1</value>
      <action>
          IF(NOT(EQUAL($reset, 0)), SR_WRITE("FFT_RESET", 1) AND SR_WRITE("FFT_RESET", 0))
      </action>
      <!--TODO: Set to zero after setting, add publisher-->
    </arg>
    <arg>
      <name>magnitude_out</name>
      <type>string</type>
      <value>COMPLEX</value>
      <check>EQUAL($magnitude_out, "COMPLEX") OR EQUAL($magnitude_out, "MAGNITUDE") OR EQUAL($magnitude_out, "MAGNITUDE_SQUARED")</check>
      <check_message>Output format must be one of: COMPLEX, MAGNITUDE, MAGNITUDE_SQUARED.</check_message>
      <action>
          IF(EQUAL($magnitude_out, "COMPLEX"),           SR_WRITE("MAGNITUDE_OUT", 0)) OR
          IF(EQUAL($magnitude_out, "MAGNITUDE"),         SR_WRITE("MAGNITUDE_OUT", 1)) OR
          IF(EQUAL($magnitude_out, "MAGNITUDE_SQUARED"), SR_WRITE("MAGNITUDE_OUT", 2))
      </action>
      <!--TODO: add publisher-->
    </arg>
  </args>
  <!--All the connections to the outside world are listed in 'ports':-->
  <ports>
    <sink>
      <name>in</name>
      <type>sc16</type>
      <vlen>$spp</vlen>
      <pkt_size>%vlen</pkt_size>
    </sink>
    <source>
      <name>out</name>
      <type>$otype</type> <!--TODO make this dependent on the output type -->
      <vlen>$spp</vlen>
      <pkt_size>%vlen</pkt_size>
    </source>
  </ports>
</nocblock>
